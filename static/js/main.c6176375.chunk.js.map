{"version":3,"sources":["logo.svg","redux/Reducer.js","components/Todos.js","components/TodoItem.js","components/DisplayTodos.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["initialState","id","Math","floor","random","item","completed","addTodoReducer","createSlice","name","reducers","addTodos","state","action","push","payload","removeTodos","filter","updateTodos","map","todo","completeTodos","actions","reducer","connect","todos","dispatch","addTodo","obj","props","console","log","useState","setTodo","className","type","onChange","e","target","value","handleChange","onClick","alert","length","TodoItem","updateTodo","removeTodo","completeTodo","inputRef","useRef","ref","disabled","defaultValue","onKeyPress","which","current","update","Button","focus","style","backgroundColor","variant","sort","setSort","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6176375.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [\r\n  {\r\n    id: Math.floor(Math.random() * 1000),\r\n    item: \"Go to the Library\",\r\n    completed: false,\r\n  },\r\n  {\r\n    id: Math.floor(Math.random() * 1000),\r\n    item: \"Have Lunch\",\r\n    completed: false,\r\n  },\r\n  {\r\n    id: Math.floor(Math.random() * 1000),\r\n    item: \"Meet friends\",\r\n    completed: false,\r\n  },\r\n];\r\n\r\nconst addTodoReducer = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n    //here we will write our reducer\r\n    //Adding todos\r\n    addTodos: (state, action) => {\r\n      state.push(action.payload);\r\n      return state;\r\n    },\r\n    //remove todos\r\n    removeTodos: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    //update todos\r\n    updateTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          return {\r\n            ...todo,\r\n            item: action.payload.item,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n    //completed\r\n    completeTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            completed: true,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodos, removeTodos, updateTodos, completeTodos } =\r\n  addTodoReducer.actions;\r\nexport const reducer = addTodoReducer.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodos } from \"../redux/Reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n  };\r\n};\r\n\r\nconst Todos = (props) => {\r\n  \r\n  console.log(\"props\",props);\r\n  \r\n  const [todo, setTodo] = useState(\"\");\r\n  \r\n    const add = () => {\r\n    if (todo === \"\") {\r\n      alert(\"Input is Empty\");\r\n    } else {\r\n      props.addTodo({\r\n        id: Math.floor(Math.random() * 1000),\r\n        item: todo,\r\n        completed: false,\r\n      });\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addTodos\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"todo-input\"\r\n        value={todo}\r\n      />\r\n\r\n      <button className=\"add-btn\"  onClick={() => add()}>\r\n        Add\r\n      </button>\r\n      <br />\r\n      \r\n      <ul>\r\n        {props.todos.length > 0 &&\r\n          props.todos.map((item) => {\r\n            return <li key={item.id}>{item.item}</li>;\r\n          })}\r\n      </ul>\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\n//we can use connect method to connect this component with redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import React, { useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nconst TodoItem = (props) => {\r\n  const { item, updateTodo, removeTodo, completeTodo } = props;\r\n\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n    inputRef.current.style.backgroundColor = \"GREEN\";\r\n  };\r\n\r\n  const update = (id, value, e) => {\r\n    if (e.which === 13) {\r\n      //here 13 is key code for enter key\r\n      updateTodo({ id, item: value });\r\n      inputRef.current.disabled = true;\r\n    }\r\n  };\r\n  return (\r\n    <li key={item.id} className=\"card\">\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      />\r\n      <div className=\"btns\">\r\n        <Button onClick={() => changeFocus()} variant=\"success\">\r\n          HIGHLIGHT\r\n        </Button>\r\n\r\n        {item.completed === false && (\r\n          <Button variant=\"primary\" onClick={() => completeTodo(item.id)}>\r\n            {\" \"}\r\n            Mark as Complete\r\n          </Button>\r\n        )}\r\n        <Button variant=\"danger\" onClick={() => removeTodo(item.id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n      {item.completed && <span className=\"completed\">done</span>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodos,\r\n  completeTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n} from \"../redux/Reducer\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n    removeTodo: (id) => dispatch(removeTodos(id)),\r\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n    completeTodo: (id) => dispatch(completeTodos(id)),\r\n  };\r\n};\r\n\r\nconst DisplayTodos = (props) => {\r\n  const [sort, setSort] = useState(\"active\");\r\n  return (\r\n    <div className=\"displaytodos\">\r\n      <div className=\"buttons\">\r\n        <button onClick={() => setSort(\"active\")}>Active</button>\r\n\r\n        <button onClick={() => setSort(\"completed\")}>Completed</button>\r\n\r\n        <button onClick={() => setSort(\"all\")}>All</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {props.todos.length > 0 && sort === \"active\"\r\n          ? props.todos.map((item) => {\r\n              return (\r\n                item.completed === false && (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    removeTodo={props.removeTodo}\r\n                    updateTodo={props.updateTodo}\r\n                    completeTodo={props.completeTodo}\r\n                  />\r\n                )\r\n              );\r\n            })\r\n          : null}\r\n        {/* for completed items */}\r\n        {props.todos.length > 0 && sort === \"completed\"\r\n          ? props.todos.map((item) => {\r\n              return (\r\n                item.completed === true && (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    removeTodo={props.removeTodo}\r\n                    updateTodo={props.updateTodo}\r\n                    completeTodo={props.completeTodo}\r\n                  />\r\n                )\r\n              );\r\n            })\r\n          : null}\r\n        {/* for all items */}\r\n        {props.todos.length > 0 && sort === \"all\"\r\n          ? props.todos.map((item) => {\r\n              return (\r\n                <TodoItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  removeTodo={props.removeTodo}\r\n                  updateTodo={props.updateTodo}\r\n                  completeTodo={props.completeTodo}\r\n                />\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Todos from './components/Todos';\nimport TodoItem from './components/TodoItem';\nimport DisplayTodos from './components/DisplayTodos';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n      <DisplayTodos/>\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./Reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}